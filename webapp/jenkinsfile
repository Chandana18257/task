pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('.')   
        DOCKER_IMAGE = "chandu57839/project"
    }

    stages {
        stage('Stage 1 - Build WAR') {
            steps {
                echo "Building WAR file..."
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Stage 2 - Build Docker Image') {
            steps {
                echo "Building Docker image..."
                sh 'docker build -t $DOCKER_IMAGE:latest .'
            }
        }

        stage('Stage 3 - Tag Docker Image') {
            steps {
                echo "Tagging Docker image..."
                sh 'docker tag $DOCKER_IMAGE:latest $DOCKER_IMAGE:${BUILD_NUMBER}'
            }
        }

        stage('Stage 4 - Push to DockerHub') {
            steps {
                echo "Pushing image to DockerHub..."
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh 'docker push $DOCKER_IMAGE:latest'
                sh 'docker push $DOCKER_IMAGE:${BUILD_NUMBER}'
            }
        }

        stage('Stage 5 - Remove Local Docker Images') {
            steps {
                echo "Cleaning up local Docker images..."
                sh 'docker rmi $DOCKER_IMAGE:latest || true'
                sh 'docker rmi $DOCKER_IMAGE:${BUILD_NUMBER} || true'
            }
        }

        stage('Stage 6 - Run Container') {
            steps {
                echo "Running container on port 8084..."
                sh 'docker run -d -p 8084:8084 $DOCKER_IMAGE:latest'
            }
        }
    }

    post {
        success {
            echo "✅ Pipeline executed successfully!"
        }
        failure {
            echo "❌ Pipeline failed. Please check logs."
        }
    }
}